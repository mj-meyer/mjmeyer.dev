---
export interface Props {
  noMargin?: boolean;
  rotate?: boolean;
}

const { noMargin = false, rotate = false } = Astro.props;
---

<div
  class={`${noMargin ? "wave-container-no-margin" : "wave-container"} ${rotate ? "rotate-180" : ""} bg-[transparent] text-skin-fill pointer-events-none backdrop-blur-md z-10 relative`}
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="wave"
    preserveAspectRatio="none"
    viewBox="0 0 1440 320"
    ><path
      fill="currentColor"
      d="M0,128L48,117.3C96,107,192,85,288,96C384,107,480,149,576,186.7C672,224,768,256,864,245.3C960,235,1056,181,1152,165.3C1248,149,1344,171,1392,181.3L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"
    ></path></svg
  >
</div>

<style>
  .wave-container {
    position: relative;
    width: 100%;
    height: 160px; /* Adjust as needed */
    margin-top: -130px; /* Adjust as needed */
    margin-bottom: -30px; /* Adjust as needed */
  }
  .wave-container-no-margin {
    position: relative;
    width: 100%;
    height: 160px; /* Adjust as needed */
  }

  .wave {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
  .gradient-overlay {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), transparent);
  }
</style>
