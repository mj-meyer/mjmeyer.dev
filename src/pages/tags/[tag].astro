---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import { SITE } from "@config";

export interface Props {
  post: CollectionEntry<"garden" | "stream">;
  tag: string;
}

export async function getStaticPaths() {
  const gardenNotes = await getCollection("garden", ({ data }) => !data.draft);
  const streamNotes = await getCollection("stream", ({ data }) => !data.draft);
  const posts = [...gardenNotes, ...streamNotes];

  const tags = getUniqueTags(posts);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const gardenNotes = await getCollection("garden", ({ data }) => !data.draft);
const streamNotes = await getCollection("stream", ({ data }) => !data.draft);
const posts = [...gardenNotes, ...streamNotes];

const tagPosts = getPostsByTag(posts, tag);
---

<Layout title={`Tag:${tag} | ${SITE.title}`} hasWaveSeparator={false}>
  <Fragment slot="header">
    <Header />
  </Fragment>

  <Main
    pageTitle={`Tag:${tag}`}
    pageDesc={`All the articles with the tag "${tag}".`}
  >
    <ul>
      {
        tagPosts.map(({ data, slug }) => (
          <Card href={`/${slug}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>
