---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Notes from "@layouts/Notes.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import { SITE } from "@config";
import Header from "@components/Header.astro";
import Main from "@layouts/Main.astro";
import Card from "@components/Card";

export interface Props {
  post: CollectionEntry<"stream">;
}

export async function getStaticPaths() {
  const posts = await getCollection("stream", ({ data }) => !data.draft);

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...pagePaths];
}

const { slug } = Astro.params;

const posts = await getCollection("stream");

const sortedPosts = getSortedPosts(posts);

const totalPages = getPageNumbers(sortedPosts.length);

const currentPage =
  slug && !isNaN(Number(slug)) && totalPages.includes(Number(slug))
    ? Number(slug)
    : 0;
const lastPost = currentPage * SITE.postPerPage;
const startPost = lastPost - SITE.postPerPage;

const paginatedPosts = sortedPosts.slice(startPost, lastPost);
---

<Notes
  posts={paginatedPosts}
  pageNum={currentPage}
  totalPages={totalPages.length}
  collectionType="stream"
>
  <Header activeNav="stream" />
  <Main
    pageTitle="Digital Stream of Resources"
    pageDesc="Content I've collected from around the interwebs that aligns with my interests and supports my learning journey, making it easier to revisit and share with others."
  >
    <ul>
      {
        paginatedPosts.map(({ data, slug }) => (
          <Card href={`/${slug}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
</Notes>
